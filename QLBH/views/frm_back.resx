<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>